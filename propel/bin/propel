#!/usr/bin/env python
from propel.bin.cli import cli_factory

if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser()
    subparser = parser.add_subparsers(dest='subparser_name')

    # Options to manage Webserver
    webserver_parser = subparser.add_parser('webserver', help='Manage Webserver')
    webserver_parser.add_argument(
        '-p',
        '--port',
        default=8080,
        type=int,
        help="Webserver Port"
    )
    webserver_parser.add_argument(
        '-x',
        '--stop',
        action="store_true",
        help="Stop Webserver"
    )

    # Options to manage Scheduler
    scheduler_parser = subparser.add_parser('scheduler', help='Manage Scheduler')
    scheduler_parser.add_argument(
        '-s',
        '--start',
        action="store_true",
        help="Start Scheduler"
    )
    scheduler_parser.add_argument(
        '-x',
        '--stop',
        action="store_true",
        help="Stop Scheduler"
    )

    # Options to manage executors
    celery_parser = subparser.add_parser('executor', help='Manage Executor Workers')
    celery_parser.add_argument(
        '-s',
        '--start',
        metavar="concurrency",
        default=1,
        type=int,
        action="store",
        help="Start Executor Worker"
    )
    celery_parser.add_argument(
        '-x',
        '--stop',
        action="store_true",
        help="Stop Executor Worker"
    )

    # Options to manage Queue
    queue_parser = subparser.add_parser('queue', help='Manage Queue')
    queue_parser.add_argument(
        '-s',
        '--start',
        action="store_true",
        help="Start RabbitMQ"
    )
    queue_parser.add_argument(
        '-x',
        '--stop',
        action="store_true",
        help="Stop RabbitMQ"
    )

    cli_args = parser.parse_args()
    cli_factory(vars(cli_args))
